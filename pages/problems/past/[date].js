import Head from "next/head";
import Image from "next/image";

export const PastProblem = ({ e, problem }) => {
  if (e) {
    return (
      <>
        <div className={styles.container}>
          <Head>
            <title>Oh No!</title>
          </Head>
          <h1>This may have been a miscalculation on our end! ðŸ˜¢</h1>
          {/* Make a toggle later to show error for geeks */}
          <p>{e}</p>
        </div>
      </>
    );
  }

  if (!problem.released) {
    return (
      <>
        <div className={styles.container}>
          <Head>
            <title>Not released</title>
          </Head>
          <h1>
            Problem on 
            {/* Add styling to span */}
            <span>{problem.date}</span> has not been released
          </h1>
        </div>
      </>
    );
  }

  return (
    <>
      <div className={styles.container}>
        <Head>
          <title>
            {problem.name} | {problem.date}
          </title>
          {/* TODO ! Add all the required headers here */}
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div>
          <h1>Past Problem</h1>
        </div>
        {/* Name */}
        <div>
          <h1>{problem.name}</h1>
        </div>
        {/* Date */}
        <div>
          <h3>{problem.date}</h3>
        </div>
        <div>
          {/* Solution */}
          <h2>{problem.solution}</h2>
          {problem.explanationImageUrl ? (
            <Image
              src={problem.explanationImageUrl}
              alt={"Picture explanation"}
              width={1000}
              height={1000}
            />
          ) : (
            <h4>No Picture Explanation Provided</h4>
          )}
        </div>
      </div>
    </>
  );
};

export async function getStaticProps(ctx) {
  const { date } = ctx.req.params;

  try {
    const problem = await db.dailyProblem.findFirstOrThrow({
      where: {
        date,
      },
    });

    if (problem.date === new Date().toISOString()) {
      return {
        redirect: {
          permanent: true,
          destination: "/signup",
        },
      };
    }

    return {
      props: {
        problem,
      },
    };
  } catch (e) {
    return {
      props: {
        e,
      },
    };
  }
}
